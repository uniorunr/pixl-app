// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders correctly 1`] = `
<main
  className="main"
>
  <section>
    <section
      className="tools-section"
    >
      <h2
        className="visually-hidden"
      >
        Tools Section
      </h2>
      <div
        className="tools"
      />
    </section>
    <section
      className="color-select-section"
    >
      <div
        className="colors"
      >
        <div>
          <input
            className="colors__input-primary"
            onChange={[Function]}
            type="color"
            value="#000000"
          />
          <div
            className="colors__primary"
            style={
              Object {
                "backgroundColor": "#000000",
              }
            }
          />
        </div>
        <div>
          <input
            className="colors__input-secondary"
            onChange={[Function]}
            type="color"
            value="#ffffff"
          />
          <div
            className="colors__secondary"
            style={
              Object {
                "backgroundColor": "#ffffff",
              }
            }
          />
        </div>
        <button
          className="colors__swap"
          onClick={[Function]}
          type="button"
        >
          <i
            className="fas fa-sync-alt"
          />
        </button>
      </div>
    </section>
  </section>
  <section
    className="frames-section"
  >
    <div
      data-react-beautiful-dnd-droppable="0"
    >
      <div
        aria-roledescription="Draggable item. Press space bar to lift"
        className="frame frame0"
        data-active={true}
        data-id={0}
        data-react-beautiful-dnd-drag-handle="0"
        data-react-beautiful-dnd-draggable="0"
        draggable={false}
        onBlur={[Function]}
        onDragStart={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onMouseDown={[Function]}
        onTouchStart={[Function]}
        onTransitionEnd={null}
        role="presentation"
        style={
          Object {
            "transform": null,
            "transition": null,
          }
        }
        tabIndex={0}
      >
        <canvas
          className="frame__canvas frame__canvas_active"
          height="128"
          id="frame0"
          onClick={[Function]}
          width="128"
        />
        <span
          className="frame__index"
        >
          1
        </span>
        <button
          className="frame__duplicate"
          onClick={[Function]}
          type="button"
        >
          <i
            className="fas fa-copy"
          />
        </button>
      </div>
    </div>
    <button
      className="frames-section__add-frame-button"
      onClick={[Function]}
      type="button"
    >
      <i
        className="fas fa-plus"
      />
      <span>
        Add
      </span>
    </button>
  </section>
  <section
    className="canvas-section"
    onContextMenu={[Function]}
  >
    <div
      className="canvas-section__wrapper"
    >
      <canvas
        className="canvas-section__canvas"
        height={512}
        id="canvas"
        onMouseDown={[Function]}
        onMouseLeave={[Function]}
        onMouseMove={[Function]}
        onMouseUp={[Function]}
        width={512}
      />
      <canvas
        className="canvas-section__canvas-overlay"
        height={512}
        id="canvas-overlay"
        onMouseDown={[Function]}
        onMouseLeave={[Function]}
        onMouseMove={[Function]}
        onMouseUp={[Function]}
        width={512}
      />
    </div>
    <div
      className="canvas-section__info"
    >
      <span
        className="canvas-section__size"
      >
        size: 64x64
      </span>
      <span
        className="canvas-section__position"
      >
        x: 0  y: 0
      </span>
    </div>
  </section>
  <section
    className="right-section"
  >
    <section
      className="preview-section"
    >
      <div
        className="preview"
      >
        <canvas
          className="preview__canvas"
          height="128"
          id="preview-canvas"
          width="128"
        />
        <button
          className="preview__download"
          onClick={[Function]}
          type="button"
        >
          <i
            className="fas fa-download"
          />
        </button>
        <button
          className="preview__fullscreen-button"
          onClick={[Function]}
          type="button"
        >
          <i
            className="fas fa-expand"
          />
        </button>
        <div
          className="fps-control"
        >
          <label
            htmlFor="fps-control__input"
          >
            <span
              className="fps-control__label"
            >
              FPS: 
              NaN
            </span>
            <input
              className="fps-control__input"
              defaultValue="12"
              id="fps-control__input"
              max="24"
              min="1"
              name="volume"
              onInput={[Function]}
              step="1"
              type="range"
            />
          </label>
        </div>
        <form
          className="canvas-size-controls"
          name="canvas-size-controls"
        >
          <label
            htmlFor="canvas-32"
          >
            32
            <input
              id="canvas-32"
              name="radio"
              onChange={[Function]}
              type="radio"
              value="32"
            />
          </label>
          <label
            htmlFor="canvas-64"
          >
            64
            <input
              defaultChecked={true}
              id="canvas-64"
              name="radio"
              onChange={[Function]}
              type="radio"
              value="64"
            />
          </label>
          <label
            htmlFor="canvas-128"
          >
            128
            <input
              id="canvas-128"
              name="radio"
              onChange={[Function]}
              type="radio"
              value="128"
            />
          </label>
        </form>
      </div>
    </section>
    <section
      className="layers-section"
    >
      <div
        className="layers-section__controls"
      >
        <button
          className="layers-section__add-button"
          onClick={[Function]}
          type="button"
        >
          <i
            className="fas fa-plus"
          />
        </button>
        <button
          className="layers-section__move-up"
          onClick={[Function]}
          type="button"
        >
          <i
            className="fas fa-arrow-up"
          />
        </button>
        <button
          className="layers-section__move-down"
          onClick={[Function]}
          type="button"
        >
          <i
            className="fas fa-arrow-down"
          />
        </button>
        <button
          className="layers-section__remove-button"
          onClick={[Function]}
          type="button"
        >
          <i
            className="fas fa-trash-alt"
          />
        </button>
      </div>
      <button
        className="layers-section__merge-button"
        onClick={[Function]}
        type="button"
      >
        merge
      </button>
      <div
        className="layers-section__wrapper"
      >
        <button
          className="layers-section__button layers-section__button_active"
          data-id={0}
          id="layer0"
          onClick={[Function]}
          type="button"
        >
          Layer 
          1
        </button>
      </div>
    </section>
  </section>
</main>
`;
